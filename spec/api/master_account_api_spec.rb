=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for Brevo::MasterAccountApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MasterAccountApi' do
  before do
    # run before each test
    @instance = Brevo::MasterAccountApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MasterAccountApi' do
    it 'should create an instance of MasterAccountApi' do
      expect(@instance).to be_instance_of(Brevo::MasterAccountApi)
    end
  end

  # unit tests for corporate_master_account_get
  # Get the details of requested master account
  # This endpoint will provide the details of the master account.
  # @param [Hash] opts the optional parameters
  # @return [MasterDetailsResponse]
  describe 'corporate_master_account_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_get
  # Get the list of all the sub-accounts of the master account.
  # This endpoint will provide the list all the sub-accounts of the master account.
  # @param offset Index of the first sub-account in the page
  # @param limit Number of sub-accounts to be displayed on each page
  # @param [Hash] opts the optional parameters
  # @return [SubAccountsResponse]
  describe 'corporate_sub_account_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_id_applications_toggle_put
  # Enable/disable sub-account application(s)
  # API endpoint for the Corporate owner to enable/disable applications on the sub-account
  # @param id Id of the sub-account organization (mandatory)
  # @param toggle_applications List of applications to activate or deactivate on a sub-account
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'corporate_sub_account_id_applications_toggle_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_id_delete
  # Delete a sub-account
  # @param id Id of the sub-account organization to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'corporate_sub_account_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_id_get
  # Get sub-account details
  # This endpoint will provide the details for the specified sub-account company
  # @param id Id of the sub-account organization
  # @param [Hash] opts the optional parameters
  # @return [SubAccountDetailsResponse]
  describe 'corporate_sub_account_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_id_plan_put
  # Update sub-account plan
  # This endpoint will update the sub-account plan
  # @param id Id of the sub-account organization
  # @param update_plan_details Values to update a sub-account plan
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'corporate_sub_account_id_plan_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_key_post
  # Create an API key for a sub-account
  # This endpoint will generate an API v3 key for a sub account
  # @param create_api_key_request Values to generate API key for sub-account
  # @param [Hash] opts the optional parameters
  # @return [CreateApiKeyResponse]
  describe 'corporate_sub_account_key_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_post
  # Create a new sub-account under a master account.
  # This endpoint will create a new sub-account under a master account
  # @param sub_account_create values to create new sub-account
  # @param [Hash] opts the optional parameters
  # @return [CreateSubAccountResponse]
  describe 'corporate_sub_account_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for corporate_sub_account_sso_token_post
  # Generate SSO token to access Brevo
  # This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://account-app.brevo.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token.
  # @param sso_token_request Values to generate SSO token for sub-account
  # @param [Hash] opts the optional parameters
  # @return [GetSsoToken]
  describe 'corporate_sub_account_sso_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_activity
  # Get user activity logs
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Mandatory if endDate is used. Enter start date in UTC date (YYYY-MM-DD) format to filter the activity in your account. Maximum time period that can be selected is one month. Additionally, you can retrieve activity logs from the past 12 months from the date of your search.
  # @option opts [String] :end_date Mandatory if startDate is used. Enter end date in UTC date (YYYY-MM-DD) format to filter the activity in your account. Maximum time period that can be selected is one month.
  # @option opts [Integer] :limit Number of documents per page
  # @option opts [Integer] :offset Index of the first document in the page.
  # @return [GetAccountActivity]
  describe 'get_account_activity test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
