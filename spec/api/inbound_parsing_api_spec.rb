=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for Brevo::InboundParsingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InboundParsingApi' do
  before do
    # run before each test
    @instance = Brevo::InboundParsingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InboundParsingApi' do
    it 'should create an instance of InboundParsingApi' do
      expect(@instance).to be_instance_of(Brevo::InboundParsingApi)
    end
  end

  # unit tests for get_inbound_email_attachment
  # Retrieve inbound attachment with download token.
  # This endpoint will retrieve inbound attachment with download token.
  # @param download_token Token to fetch a particular attachment
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_inbound_email_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inbound_email_events
  # Get the list of all the events for the received emails.
  # This endpoint will show the list of all the events for the received emails.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sender Email address of the sender.
  # @option opts [String] :start_date Mandatory if endDate is used. Starting date (YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss.SSSZ) from which you want to fetch the list. Maximum time period that can be selected is one month.
  # @option opts [String] :end_date Mandatory if startDate is used. Ending date (YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss.SSSZ) till which you want to fetch the list. Maximum time period that can be selected is one month.
  # @option opts [Integer] :limit Number of documents returned per page
  # @option opts [Integer] :offset Index of the first document on the page
  # @option opts [String] :sort Sort the results in the ascending/descending order of record creation
  # @return [GetInboundEmailEvents]
  describe 'get_inbound_email_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inbound_email_events_by_uuid
  # Fetch all events history for one particular received email.
  # This endpoint will show the list of all events history for one particular received email.
  # @param uuid UUID to fetch events specific to recieved email
  # @param [Hash] opts the optional parameters
  # @return [GetInboundEmailEventsByUuid]
  describe 'get_inbound_email_events_by_uuid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
