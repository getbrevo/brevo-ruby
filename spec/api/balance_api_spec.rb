=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for Brevo::BalanceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BalanceApi' do
  before do
    # run before each test
    @instance = Brevo::BalanceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BalanceApi' do
    it 'should create an instance of BalanceApi' do
      expect(@instance).to be_instance_of(Brevo::BalanceApi)
    end
  end

  # unit tests for begin_transaction
  # Create new transaction
  # Creates new transaction and returns information
  # @param pid Loyalty Program Id
  # @param body Transaction Payload
  # @param [Hash] opts the optional parameters
  # @return [Transaction]
  describe 'begin_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_transaction
  # Cancel transaction
  # Cancels transaction
  # @param pid Loyalty Program Id
  # @param tid Transaction Id
  # @param [Hash] opts the optional parameters
  # @return [Transaction]
  describe 'cancel_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for complete_transaction
  # Complete transaction
  # Completes transaction
  # @param pid Loyalty Program Id
  # @param tid Transaction Id
  # @param [Hash] opts the optional parameters
  # @return [Transaction]
  describe 'complete_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_balance_limit
  # Create balance limits
  # Creates balance limit and sends the created UUID along with the data
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param body Balance Definition Payload
  # @param [Hash] opts the optional parameters
  # @return [BalanceLimit]
  describe 'create_balance_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_balance_order
  # Create balance order
  # Returns created order
  # @param pid Loyalty Program Id
  # @param body Order Payload
  # @param [Hash] opts the optional parameters
  # @return [BalanceOrder]
  describe 'create_balance_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_balance_definition
  # Delete balance definition
  # Delete Balance definition
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_balance_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_balance_limit
  # Delete balance limit
  # Delete balance limit
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param blid Balance Limit Id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_balance_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_balance_definition
  # Get balance definition
  # Returns balance definition
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :version Version
  # @return [BalanceDefinition]
  describe 'get_balance_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_balance_definition_list
  # Get balance definition list
  # Returns balance definition page
  # @param pid Loyalty Program Id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Limit the number of records returned
  # @option opts [Integer] :offset Offset to paginate records
  # @option opts [String] :sort_field Field to sort by
  # @option opts [String] :sort Sort direction
  # @option opts [String] :version Version
  # @return [BalanceDefinitionPage]
  describe 'get_balance_definition_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_balance_limit
  # Get balance limits
  # Fetches balance limits and send the created UUID along with the data
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param blid Balance Limit Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :version Version
  # @return [BalanceLimit]
  describe 'get_balance_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_contact_balances
  # Get balance list
  # Returns balance list
  # @param pid Loyalty Program Id
  # @param [Hash] opts the optional parameters
  # @return [ContactBalancesResp]
  describe 'get_contact_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription_balances
  # Get subscription balances
  # Returns subscription balances
  # @param cid Contact Id
  # @param pid Loyalty Program Id
  # @param [Hash] opts the optional parameters
  # @return [ModelSubscriptionBalanceResp]
  describe 'get_subscription_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_balance_programs_pid_active_balance_get
  # Get Active Balances API
  # Returns Active Balances
  # @param pid Loyalty Program Id
  # @param contact_id Contact ID
  # @param balance_definition_id Balance Definition ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Limit
  # @option opts [Integer] :offset Offset
  # @option opts [String] :sort_field Sort Field
  # @option opts [String] :sort Sort Order
  # @return [BalanceLimit]
  describe 'loyalty_balance_programs_pid_active_balance_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_balance_programs_pid_balance_definitions_post
  # Create balance definition
  # Creates balance definition and returns information
  # @param pid Loyalty Program Id
  # @param body Create Balance Definition Payload
  # @param [Hash] opts the optional parameters
  # @return [BalanceDefinition]
  describe 'loyalty_balance_programs_pid_balance_definitions_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_balance_programs_pid_subscriptions_cid_balances_post
  # Create subscription balances
  # Creates a balance for a contact
  # @param pid Loyalty Program Id
  # @param cid Contact Id
  # @param body Create Balnce Payload
  # @param [Hash] opts the optional parameters
  # @return [Balance]
  describe 'loyalty_balance_programs_pid_subscriptions_cid_balances_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_balance_programs_pid_transaction_history_get
  # Get Transaction History API
  # Returns transaction history
  # @param pid Loyalty Program Id
  # @param contact_id Contact ID
  # @param balance_definition_id Balance Definition ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Limit the number of records returned
  # @option opts [Integer] :offset Skip a number of records
  # @option opts [String] :sort_field Field to sort by
  # @option opts [String] :sort Sort order, either asc or desc
  # @option opts [Array<String>] :filters Filters to apply
  # @return [TransactionHistoryResp]
  describe 'loyalty_balance_programs_pid_transaction_history_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_balance_definition
  # Update balance definition
  # Updates Balance definition
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param body Update Balance Definition Payload
  # @param [Hash] opts the optional parameters
  # @return [BalanceDefinition]
  describe 'update_balance_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_balance_limit
  # Updates balance limit
  # Updates balance limit
  # @param pid Loyalty Program Id
  # @param bdid Balance Definition Id
  # @param blid Balance Limit Id
  # @param body Balance Limits Payload
  # @param [Hash] opts the optional parameters
  # @return [BalanceLimit]
  describe 'update_balance_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
