=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/getbrevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for BrevoRuby::CompaniesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CompaniesApi' do
  before do
    # run before each test
    @instance = BrevoRuby::CompaniesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompaniesApi' do
    it 'should create an instance of CompaniesApi' do
      expect(@instance).to be_instance_of(BrevoRuby::CompaniesApi)
    end
  end

  # unit tests for companies_attributes_get
  # Get company attributes
  # @param [Hash] opts the optional parameters
  # @return [CompanyAttributes]
  describe 'companies_attributes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_get
  # Get all companies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filters Filter by attrbutes. If you have filter for owner on your side please send it as {\&quot;attributes.owner\&quot;:\&quot;5b1a17d914b73d35a76ca0c7\&quot;}
  # @option opts [Integer] :linked_contacts_ids Filter by linked contacts ids
  # @option opts [String] :linked_deals_ids Filter by linked deals ids
  # @option opts [Integer] :page Index of the first document of the page
  # @option opts [Integer] :limit Number of documents per page
  # @option opts [String] :sort Sort the results in the ascending/descending order. Default order is **descending** by creation if &#x60;sort&#x60; is not passed
  # @option opts [String] :sort_by The field used to sort field names.
  # @return [CompaniesList]
  describe 'companies_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_id_delete
  # Delete a company
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'companies_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_id_get
  # Get a company
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'companies_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_id_patch
  # Update a company
  # @param id 
  # @param body Updated company details.
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'companies_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_link_unlink_id_patch
  # Link and Unlink company with contacts and deals
  # @param id 
  # @param body Linked / Unlinked contacts and deals ids.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'companies_link_unlink_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_post
  # Create a company
  # @param body Company create data.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'companies_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
