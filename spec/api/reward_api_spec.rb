=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for Brevo::RewardApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RewardApi' do
  before do
    # run before each test
    @instance = Brevo::RewardApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RewardApi' do
    it 'should create an instance of RewardApi' do
      expect(@instance).to be_instance_of(Brevo::RewardApi)
    end
  end

  # unit tests for get_code_count
  # Get code count
  # Get code count
  # @param pid Loyalty Program ID
  # @param cpid Code Pool ID
  # @param [Hash] opts the optional parameters
  # @return [MainCodeCountHttpResponse]
  describe 'get_code_count test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_offers_get
  # Get Reward Page API
  # Returns a reward page
  # @param pid Loyalty Program ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Page size
  # @option opts [Integer] :offset Pagination offset
  # @option opts [String] :state State of the reward
  # @option opts [String] :version Version
  # @return [MainRewardPage]
  describe 'loyalty_offer_programs_pid_offers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_offers_post
  # Create a reward
  # Creates a new reward in loyalty program.
  # @param pid Loyalty Program ID
  # @param payload Reward creation payload
  # @param [Hash] opts the optional parameters
  # @return [MainCreateRewardResponse]
  describe 'loyalty_offer_programs_pid_offers_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_attribute_post
  # Create a voucher
  # Create a voucher and attribute it to a specific membership.
  # @param pid Loyalty Program ID
  # @param payload Voucher creation payload
  # @param [Hash] opts the optional parameters
  # @return [MainRewardAttribution]
  describe 'loyalty_offer_programs_pid_rewards_attribute_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_redeem_post
  # Create redeem voucher request
  # Creates a request to redeem a voucher.
  # @param pid Loyalty Program ID
  # @param payload Redeem transaction creation payload
  # @param [Hash] opts the optional parameters
  # @return [MainRedeem]
  describe 'loyalty_offer_programs_pid_rewards_redeem_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_redeem_tid_complete_post
  # Complete redeem voucher request
  # Completes voucher redeem request.
  # @param pid Loyalty Program ID
  # @param tid Redeem transaction ID
  # @param [Hash] opts the optional parameters
  # @return [MainRedeem]
  describe 'loyalty_offer_programs_pid_rewards_redeem_tid_complete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_revoke_delete
  # Revoke vouchers
  # Revoke attributed vouchers.
  # @param pid Loyalty Program ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :attributed_reward_ids Reward Attribution IDs (comma seperated)
  # @return [String]
  describe 'loyalty_offer_programs_pid_rewards_revoke_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_rid_get
  # Get reward information
  # Returns reward information.
  # @param pid Loyalty Program ID
  # @param rid Reward ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :version Version
  # @return [MainReward]
  describe 'loyalty_offer_programs_pid_rewards_rid_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_rewards_validate_post
  # Validate a reward
  # Validates a reward.
  # @param pid Loyalty Program ID
  # @param body Reward validation payload
  # @param [Hash] opts the optional parameters
  # @return [MainRewardValidate]
  describe 'loyalty_offer_programs_pid_rewards_validate_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loyalty_offer_programs_pid_vouchers_get
  # Get voucher for a contact
  # Get voucher for a contact
  # @param pid Loyalty Program ID
  # @param contact_id Contact ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Page size
  # @option opts [Integer] :offset Pagination offset
  # @option opts [String] :sort Sort order
  # @option opts [String] :sort_field Sort field
  # @option opts [String] :metadata_key_value Metadata value for a Key filter
  # @option opts [String] :reward_id Reward ID
  # @return [MainModelContactRewardsResp]
  describe 'loyalty_offer_programs_pid_vouchers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
