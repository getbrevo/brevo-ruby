=begin
#Brevo API

#Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/getbrevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 

OpenAPI spec version: 3.0.0
Contact: contact@brevo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for BrevoRuby::ConversationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ConversationsApi' do
  before do
    # run before each test
    @instance = BrevoRuby::ConversationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConversationsApi' do
    it 'should create an instance of ConversationsApi' do
      expect(@instance).to be_instance_of(BrevoRuby::ConversationsApi)
    end
  end

  # unit tests for conversations_agent_online_ping_post
  # Sets agent’s status to online for 2-3 minutes
  # We recommend pinging this endpoint every minute for as long as the agent has to be considered online.
  # @param body Agent fields.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'conversations_agent_online_ping_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_messages_id_delete
  # Delete a message sent by an agent
  # Only agents’ messages can be deleted.
  # @param id ID of the message
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'conversations_messages_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_messages_id_get
  # Get a message
  # @param id ID of the message
  # @param [Hash] opts the optional parameters
  # @return [ConversationsMessage]
  describe 'conversations_messages_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_messages_id_put
  # Update a message sent by an agent
  # Only agents’ messages can be edited.
  # @param id ID of the message
  # @param [Hash] opts the optional parameters
  # @option opts [Body9] :body 
  # @return [ConversationsMessage]
  describe 'conversations_messages_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_messages_post
  # Send a message as an agent
  # @param body Message fields.
  # @param [Hash] opts the optional parameters
  # @return [ConversationsMessage]
  describe 'conversations_messages_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_pushed_messages_id_delete
  # Delete an automated message
  # @param id ID of the message
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'conversations_pushed_messages_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_pushed_messages_id_get
  # Get an automated message
  # @param id ID of the message sent previously
  # @param [Hash] opts the optional parameters
  # @return [ConversationsMessage]
  describe 'conversations_pushed_messages_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_pushed_messages_id_put
  # Update an automated message
  # @param id ID of the message
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ConversationsMessage]
  describe 'conversations_pushed_messages_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conversations_pushed_messages_post
  # Send an automated message to a visitor
  # Example of automated messages: order status, announce new features in your web app, etc.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ConversationsMessage]
  describe 'conversations_pushed_messages_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
